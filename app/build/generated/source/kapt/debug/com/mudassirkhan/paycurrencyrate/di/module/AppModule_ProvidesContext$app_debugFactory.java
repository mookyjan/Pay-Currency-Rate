// Generated by Dagger (https://dagger.dev).
package com.mudassirkhan.paycurrencyrate.di.module;

import android.app.Application;
import android.content.Context;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvidesContext$app_debugFactory implements Factory<Context> {
  private final AppModule module;

  private final Provider<Application> applicationProvider;

  public AppModule_ProvidesContext$app_debugFactory(AppModule module,
      Provider<Application> applicationProvider) {
    this.module = module;
    this.applicationProvider = applicationProvider;
  }

  @Override
  public Context get() {
    return providesContext$app_debug(module, applicationProvider.get());
  }

  public static AppModule_ProvidesContext$app_debugFactory create(AppModule module,
      Provider<Application> applicationProvider) {
    return new AppModule_ProvidesContext$app_debugFactory(module, applicationProvider);
  }

  public static Context providesContext$app_debug(AppModule instance, Application application) {
    return Preconditions.checkNotNull(instance.providesContext$app_debug(application), "Cannot return null from a non-@Nullable @Provides method");
  }
}
